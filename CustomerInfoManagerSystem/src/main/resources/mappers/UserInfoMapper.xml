<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.one.mapper.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.one.model.UserInfo">
        <id column="userid" property="userid" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="userpassword" property="userpassword" jdbcType="VARCHAR"/>
        <result column="useremail" property="useremail" jdbcType="VARCHAR"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="birthdate" property="birthdate" jdbcType="TIMESTAMP"/>
        <result column="education" property="education" jdbcType="VARCHAR"/>
        <result column="IDcard" property="idcard" jdbcType="BIGINT"/>
        <result column="customerunit" property="customerunit" jdbcType="VARCHAR"/>
        <result column="managername" property="managername" jdbcType="VARCHAR"/>
        <result column="other" property="other" jdbcType="VARCHAR"/>
        <result column="useraccount" property="useraccount" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        userid
        , username, userpassword, useremail, salt, sex, birthdate, education, IDcard,
    customerunit, managername, other, useraccount
    </sql>
    <select id="selectbyaccount" resultMap="BaseResultMap" parameterType="String">
        select *
        from user_info
        where useraccount = #{useraccount}
    </select>
    <select id="selectBymanagerName" resultMap="BaseResultMap" parameterType="String">
        select *
        from user_info
        where managername = #{managerName}
    </select>

    <select id="selectByuserName" resultMap="BaseResultMap" parameterType="String">
        SELECT *
        FROM user_info
        WHERE CONCAT_WS(userid, username, useremail, salt, sex, birthdate, education, IDcard, customerunit, managername,
                        other, useraccount) LIKE "%"#{string}"%"
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        select *
        from user_info
    </select>
    <select id="getStaffByUserName" resultMap="BaseResultMap" parameterType="com.one.model.UserInfo">
        select *
        from user_info
        where useraccount = #{useraccount}
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_info
        where userid = #{userid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user_info
        where userid = #{userid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.one.model.UserInfo">
        insert into user_info (userid, username, userpassword,
                               useremail, salt, sex,
                               birthdate, education, IDcard,
                               customerunit, managername, other,
                               useraccount)
        values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR},
                #{useremail,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
                #{birthdate,jdbcType=TIMESTAMP}, #{education,jdbcType=VARCHAR}, #{idcard,jdbcType=BIGINT},
                #{customerunit,jdbcType=VARCHAR}, #{managername,jdbcType=VARCHAR}, #{other,jdbcType=VARCHAR},
                #{useraccount,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.one.model.UserInfo">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                userid,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="userpassword != null">
                userpassword,
            </if>
            <if test="useremail != null">
                useremail,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="birthdate != null">
                birthdate,
            </if>
            <if test="education != null">
                education,
            </if>
            <if test="idcard != null">
                IDcard,
            </if>
            <if test="customerunit != null">
                customerunit,
            </if>
            <if test="managername != null">
                managername,
            </if>
            <if test="other != null">
                other,
            </if>
            <if test="useraccount != null">
                useraccount,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="userpassword != null">
                #{userpassword,jdbcType=VARCHAR},
            </if>
            <if test="useremail != null">
                #{useremail,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="birthdate != null">
                #{birthdate,jdbcType=TIMESTAMP},
            </if>
            <if test="education != null">
                #{education,jdbcType=VARCHAR},
            </if>
            <if test="idcard != null">
                #{idcard,jdbcType=BIGINT},
            </if>
            <if test="customerunit != null">
                #{customerunit,jdbcType=VARCHAR},
            </if>
            <if test="managername != null">
                #{managername,jdbcType=VARCHAR},
            </if>
            <if test="other != null">
                #{other,jdbcType=VARCHAR},
            </if>
            <if test="useraccount != null">
                #{useraccount,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.one.model.UserInfo">
        update user_info
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="userpassword != null">
                userpassword = #{userpassword,jdbcType=VARCHAR},
            </if>
            <if test="useremail != null">
                useremail = #{useremail,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="birthdate != null">
                birthdate = #{birthdate,jdbcType=TIMESTAMP},
            </if>
            <if test="education != null">
                education = #{education,jdbcType=VARCHAR},
            </if>
            <if test="idcard != null">
                IDcard = #{idcard,jdbcType=BIGINT},
            </if>
            <if test="customerunit != null">
                customerunit = #{customerunit,jdbcType=VARCHAR},
            </if>
            <if test="managername != null">
                managername = #{managername,jdbcType=VARCHAR},
            </if>
            <if test="other != null">
                other = #{other,jdbcType=VARCHAR},
            </if>
            <if test="useraccount != null">
                useraccount = #{useraccount,jdbcType=VARCHAR},
            </if>
        </set>
        where userid = #{userid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.one.model.UserInfo">
        update user_info
        set username     = #{username,jdbcType=VARCHAR},
            userpassword = #{userpassword,jdbcType=VARCHAR},
            useremail    = #{useremail,jdbcType=VARCHAR},
            salt         = #{salt,jdbcType=VARCHAR},
            sex          = #{sex,jdbcType=VARCHAR},
            birthdate    = #{birthdate,jdbcType=TIMESTAMP},
            education    = #{education,jdbcType=VARCHAR},
            IDcard       = #{idcard,jdbcType=BIGINT},
            customerunit = #{customerunit,jdbcType=VARCHAR},
            managername  = #{managername,jdbcType=VARCHAR},
            other        = #{other,jdbcType=VARCHAR},
            useraccount  = #{useraccount,jdbcType=VARCHAR}
        where userid = #{userid,jdbcType=INTEGER}
    </update>
</mapper>